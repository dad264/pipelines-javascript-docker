trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
- group: variable group 07-Jan
- name: imageName
  value: 'pipelines-javascript-docker'
- name: semver
  value: '2.4.1'

stages:
- stage: lint
  jobs:
  - job: lint
    displayName: Dockerfile Lint
    container: 
      image: hadolint/hadolint:latest-debian
    steps:
    - script: hadolint app/Dockerfile
      displayName: hadolint
      failOnStderr: true
      continueOnError: true

- stage: dockerize
  jobs:
  - job: dockerize
    displayName: Docker Build and Push
    steps:
    - bash: |
        SEMVER_MEDIUM=$(echo $SEMVER | cut -d '.' -f1,2)
        SEMVER_SHORT=$(echo $SEMVER | cut -d '.' -f1)
        
        # create pipeline variables
        echo "##vso[task.setvariable variable=semver-medium]$SEMVER_MEDIUM"
        echo "##vso[task.setvariable variable=semver-short]$SEMVER_SHORT"

    - task: Docker@2
      displayName: Login to Quay.io
      inputs:
        command: login
        containerRegistry: quay.io
    - task: Docker@2
      displayName: Build and Push
      inputs:
        repository: dad264/$(imageName)
        command: buildAndPush
        Dockerfile: app/Dockerfile
        tags: |
          $(Build.SourceBranchName)-$(Build.SourceVersion)-$(Build.BuildNumber)
          $(semver)
          $(semver-medium)
          $(semver-short)

- stage: anchore
  variables:
    ANCHORE_CLI_URL: "https://anchore.qa.k8s.psu.edu/v1/"
    ANCHORE_SCAN_IMAGE: quay.io/dad264/$(imageName):$(Build.SourceBranchName)-$(Build.SourceVersion)-$(Build.BuildNumber)
    ANCHORE_RETRIES: 20    
  jobs:
  - job: anchore
    displayName: CVE Scan
    #container: 
    #  image: anchore/engine-cli:latest
    steps:
    - script: docker run -e ANCHORE_CLI_URL=${ANCHORE_CLI_URL} -e ANCHORE_CLI_USER=${ANCHORE_CLI_USER} -e ANCHORE_CLI_PASS=${ANCHORE_CLI_PASS} anchore/engine-cli:latest anchore-cli image add ${ANCHORE_SCAN_IMAGE}
      env:
        ANCHORE_CLI_PASS: $(ANCHORE_CLI_PASS)
    - script: anchore-cli image wait ${ANCHORE_SCAN_IMAGE}
    - script: anchore-cli evaluate check ${ANCHORE_SCAN_IMAGE} --detail
